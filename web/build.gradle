buildscript {
	ext {
		springBootVersion = '3.2.0'
	}
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version "${springBootVersion}"
/*
 * The dependency management plugin remains a transitive dependency of spring-boot-gradle-plugin
 * so thereâ€™s no need for it to be listed as a classpath dependency in the buildscript configuration.
 */
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

// Fix for log4j vulnerability, remove when updating spring boot version
ext['log4j2.version'] = '2.17.1'

def bomVersion = "2023.0.0-RC1"

group = "gov.nih.nci.term.browser.web"
version = "1.10.0.RELEASE"


springBoot {
    buildInfo()          // generate file META-INF/build-info.properties during the build
}

// Java Toolchain to detect which version of Java to use, if not present
// it will automatically download and install the required version of Java
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-gateway-webflux'
    // fixes netty resolver error for macos
    implementation 'io.netty:netty-resolver-dns-native-macos'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'

}

//frontend:build will be run before the processResources
processResources.dependsOn('frontend:build')

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$bomVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}