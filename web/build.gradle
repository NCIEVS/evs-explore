buildscript {
	ext {
		springBootVersion = '2.7.17'
	}
    repositories {

        jcenter()
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
        mavenCentral() 
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'war'
    id 'org.springframework.boot' version '2.7.17'
/*
 * The dependency management plugin remains a transitive dependency of spring-boot-gradle-plugin
 * so thereâ€™s no need for it to be listed as a classpath dependency in the buildscript configuration.
 */
    id 'io.spring.dependency-management' version '1.1.3'
    id 'maven-publish'
}

// Fix for log4j vulnerability, remove when updating spring boot version
ext['log4j2.version'] = '2.17.1'

def bomVersion = "Greenwich.RELEASE"

group = "gov.nih.nci.term.browser.web"
version = "1.10.0.RELEASE"

sourceCompatibility = 17
targetCompatibility = 17

springBoot {
    buildInfo()          // generate file META-INF/build-info.properties during the build
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-actuator'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-zuul"
    implementation 'org.springframework.boot:spring-boot-properties-migrator'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.1'

}

jar {
    archiveBaseName = project.name
    version =  project.version
     manifest {
        attributes 'Main-Class': 'main.java.gov.nih.evsexplore.web.Application'
    }
}

jar {
    from('frontend/dist') {
        //Public is a default supported Spring Boot resources directory.
        into 'public'
    }
}
 
//frontend:build will be run before the processResources
processResources.dependsOn('frontend:build')

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$bomVersion"
    }
}

test {
    /*
     * Configure gradle to show standard out and standard error
     * of the test JVM(s) on the console
     */
    testLogging.showStandardStreams = true

    
}

tasks.register('zipFile', Zip) {
    def zipFileRootDirectory = "${project.name}-${project.version}"

    from('src/main/bin') {
        fileMode = 0755
        into "$zipFileRootDirectory/bin"
    }
    from("$buildDir/libs") {
        include '*.war'
        into "$zipFileRootDirectory/lib"
    }
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}


zipFile.dependsOn = [ bootWar ]
build.dependsOn = [ test, bootWar, zipFile ]
publishToMavenLocal.dependsOn = [ bootWar, zipFile ]


